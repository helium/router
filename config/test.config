%% -*- erlang -*-
[
    {router, [
        {oui, 1},
        {metrics_port, 3001},
        {max_v8_context, 10},
        {router_http_channel_url_check, false},
        {router_xor_filter_worker, false},
        {charge_when_no_offer, true},
        {config_service_max_timeout_attempt, 5}
    ]},
    {blockchain, [
        {port, 3615},
        {sc_sup_type, server}
    ]},
    {grpcbox, [
        {client, #{
            channels => [
                {ics_channel, [{http, "localhost", 8085, []}], #{}},
                {default_channel, [{http, "localhost", 8080, []}], #{}}
            ]
        }},
        {servers, [
            #{
                grpc_opts => #{
                    service_protos => [router_pb, state_channel_pb, packet_router_pb],
                    services => #{
                        'helium.router' => helium_router_service,
                        'helium.state_channel' => blockchain_grpc_sc_server_handler,
                        'helium.packet_router.packet' => helium_packet_service
                    }
                },
                transport_opts => #{ssl => false},
                listen_opts => #{
                    port => 8080,
                    ip => {0, 0, 0, 0}
                },
                pool_opts => #{size => 2},
                server_opts => #{
                    header_table_size => 4096,
                    enable_push => 1,
                    max_concurrent_streams => unlimited,
                    initial_window_size => 65535,
                    max_frame_size => 16384,
                    max_header_list_size => unlimited
                }
            },
            #{
                grpc_opts => #{
                    service_protos => [iot_config_pb],
                    services => #{
                        'helium.iot_config.gateway' => router_test_ics_gateway_service,
                        'helium.iot_config.session_key_filter' => router_test_ics_skf_service,
                        'helium.iot_config.route' => router_test_ics_route_service
                    }
                },
                transport_opts => #{ssl => false},
                listen_opts => #{
                    port => 8085,
                    ip => {0, 0, 0, 0}
                },
                pool_opts => #{size => 2},
                server_opts => #{
                    header_table_size => 4096,
                    enable_push => 1,
                    max_concurrent_streams => unlimited,
                    initial_window_size => 65535,
                    max_frame_size => 16384,
                    max_header_list_size => unlimited
                }
            }
        ]}
    ]}
].
