[
    {libp2p, [{max_tcp_connections, 50000}]},
    {blockchain, [
        {base_dir, "/var/data"},
        {update_dir, "update"},
        {port, 2154},
        {seed_nodes, "${ROUTER_SEED_NODES}"},
        {honor_quick_sync, true},
        {quick_sync_mode, blessed_snapshot},
        {blessed_snapshot_block_height, 733681},
        {blessed_snapshot_block_hash,
            <<248, 124, 118, 173, 85, 247, 158, 155, 253, 103, 32, 64, 55, 169, 81, 178, 24, 216,
                200, 7, 40, 150, 69, 43, 64, 83, 161, 45, 58, 227, 15, 201>>},
        {sc_packet_handler, router_device_routing}
    ]},
    {router, [
        {max_v8_context, 1000},
        {oui, "${ROUTER_OUI}"},
        {default_devaddr, "${ROUTER_DEFAULT_DEVADDR}"},
        {sc_open_dc_amount, "${ROUTER_SC_OPEN_DC_AMOUNT}"},
        {sc_expiration_interval, "${ROUTER_SC_EXPIRATION_INTERVAL}"},
        {router_console_api, [
            {endpoint, <<"${ROUTER_CONSOLE_ENDPOINT}">>},
            {ws_endpoint, <<"${ROUTER_CONSOLE_WS_ENDPOINT}">>},
            {secret, <<"${ROUTER_CONSOLE_SECRET}">>}
        ]},
        {metrics, [
            {reporters, [router_metrics_reporter_prometheus]},
            {router_metrics_reporter_prometheus, [{port, 3000}]}
        ]},
        {router_xor_filter_worker, "${ROUTER_XOR_FILTER_WORKER}"},
        {frame_timeout, "${ROUTER_FRAME_TIMEOUT}"}
    ]},
    {grpcbox, [
        {servers, [
            #{
                grpc_opts => #{
                    service_protos => [router_pb],
                    services => #{'helium.router' => helium_router_service}
                },
                transport_opts => #{ssl => false},
                listen_opts => #{
                    port => 8080,
                    ip => {0, 0, 0, 0}
                },
                pool_opts => #{size => 100},
                server_opts => #{
                    header_table_size => 4096,
                    enable_push => 1,
                    max_concurrent_streams => unlimited,
                    initial_window_size => 65535,
                    max_frame_size => 16384,
                    max_header_list_size => unlimited
                }
            }
        ]}
    ]},
    {prometheus, [
        {collectors, [
            prometheus_boolean,
            prometheus_counter,
            prometheus_gauge,
            prometheus_histogram,
            prometheus_vm_memory_collector,
            prometheus_vm_system_info_collector
        ]},
        {vm_system_info_collector_metrics, [process_count]}
    ]},
    {lager, [
        {suppress_supervisor_start_stop, true},
        {log_root, "/var/data/log"},
        {crash_log, "crash.log"},
        {handlers, [
            {lager_console_backend, [
                {level, warning},
                {formatter_config, [
                    "[",
                    date,
                    " ",
                    time,
                    "] ",
                    pid,
                    " [",
                    severity,
                    "]",
                    {device_id, [" [", device_id, "]"], ""},
                    " [",
                    {module, ""},
                    {function, [":", function], ""},
                    {line, [":", line], ""},
                    "] ",
                    message,
                    "\n"
                ]}
            ]},
            {lager_file_backend, [
                {file, "router.log"},
                {level, warning},
                {size, 0},
                {date, "$D0"},
                {count, 7},
                {formatter_config, [
                    "[",
                    date,
                    " ",
                    time,
                    "] ",
                    pid,
                    " [",
                    severity,
                    "]",
                    {device_id, [" [", device_id, "]"], ""},
                    " [",
                    {module, ""},
                    {function, [":", function], ""},
                    {line, [":", line], ""},
                    "] ",
                    message,
                    "\n"
                ]}
            ]}
        ]},
        {traces, [
            {lager_console_backend, [{application, router}], info},
            {lager_console_backend, [{module, router_console_api}], info},
            {lager_console_backend, [{module, router_device_routing}], info},
            {{lager_file_backend, "router.log"}, [{application, router}], info},
            {{lager_file_backend, "router.log"}, [{module, router_console_api}], info},
            {{lager_file_backend, "router.log"}, [{module, router_device_routing}], info}
        ]}
    ]}
].
